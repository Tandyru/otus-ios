//
// CountryDetails.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Full country details */
public struct CountryDetails: Codable, JSONEncodable, Hashable {

    /** The ISO-3166 country code */
    public var code: String?
    /** The country dialing prefix */
    public var callingCode: String?
    /** A list of supported ISO-4217 currency codes */
    public var currencyCodes: [String]?
    /** The country flag image */
    public var flagImageUri: String?
    /** The country name (varies by languageCode) */
    public var name: String?
    /** The number of regions in this country */
    public var numRegions: Int?
    /** The country WikiData id */
    public var wikiDataId: String?

    public init(code: String? = nil, callingCode: String? = nil, currencyCodes: [String]? = nil, flagImageUri: String? = nil, name: String? = nil, numRegions: Int? = nil, wikiDataId: String? = nil) {
        self.code = code
        self.callingCode = callingCode
        self.currencyCodes = currencyCodes
        self.flagImageUri = flagImageUri
        self.name = name
        self.numRegions = numRegions
        self.wikiDataId = wikiDataId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case code
        case callingCode
        case currencyCodes
        case flagImageUri
        case name
        case numRegions
        case wikiDataId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(code, forKey: .code)
        try container.encodeIfPresent(callingCode, forKey: .callingCode)
        try container.encodeIfPresent(currencyCodes, forKey: .currencyCodes)
        try container.encodeIfPresent(flagImageUri, forKey: .flagImageUri)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(numRegions, forKey: .numRegions)
        try container.encodeIfPresent(wikiDataId, forKey: .wikiDataId)
    }
}

