//
// RegionSummary.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Minimal country region info */
public struct RegionSummary: Codable, JSONEncodable, Hashable {

    /** An ISO-3166 country code */
    public var countryCode: String?
    /** The FIPS 10-4 region code */
    public var fipsCode: String?
    /** The ISO region code */
    public var isoCode: String?
    /** The region name (varies by languageCode) */
    public var name: String?
    /** The region WikiData id */
    public var wikiDataId: String?

    public init(countryCode: String? = nil, fipsCode: String? = nil, isoCode: String? = nil, name: String? = nil, wikiDataId: String? = nil) {
        self.countryCode = countryCode
        self.fipsCode = fipsCode
        self.isoCode = isoCode
        self.name = name
        self.wikiDataId = wikiDataId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case countryCode
        case fipsCode
        case isoCode
        case name
        case wikiDataId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(countryCode, forKey: .countryCode)
        try container.encodeIfPresent(fipsCode, forKey: .fipsCode)
        try container.encodeIfPresent(isoCode, forKey: .isoCode)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(wikiDataId, forKey: .wikiDataId)
    }
}

