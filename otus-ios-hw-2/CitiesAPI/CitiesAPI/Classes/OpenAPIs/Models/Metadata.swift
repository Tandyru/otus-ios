//
// Metadata.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Result metadata (currently only associated with collection results) */
public struct Metadata: Codable, JSONEncodable, Hashable {

    /** The zero-ary offset into the results (0 is the first result) */
    public var currentOffset: Int64?
    /** The total number of results across pages */
    public var totalCount: Int64?

    public init(currentOffset: Int64? = nil, totalCount: Int64? = nil) {
        self.currentOffset = currentOffset
        self.totalCount = totalCount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case currentOffset
        case totalCount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(currentOffset, forKey: .currentOffset)
        try container.encodeIfPresent(totalCount, forKey: .totalCount)
    }
}

