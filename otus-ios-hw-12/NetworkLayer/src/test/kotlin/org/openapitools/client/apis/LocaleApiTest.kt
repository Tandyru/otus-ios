/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import org.openapitools.client.apis.LocaleApi
import org.openapitools.client.models.BaseResponse
import org.openapitools.client.models.CurrenciesResponse
import org.openapitools.client.models.DateTimeResponse
import org.openapitools.client.models.LanguagesResponse
import org.openapitools.client.models.LocalesResponse
import org.openapitools.client.models.TimeResponse
import org.openapitools.client.models.TimeZoneResponse
import org.openapitools.client.models.TimeZonesResponse

class LocaleApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of LocaleApi
        //val apiInstance = LocaleApi()

        // to test getCurrenciesUsingGET
        should("test getCurrenciesUsingGET") {
            // uncomment below to test getCurrenciesUsingGET
            //val countryId : kotlin.String = countryId_example // kotlin.String | Currencies for this country id
            //val hateoasMode : kotlin.Boolean = true // kotlin.Boolean | Include HATEOAS-style links in results
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to retrieve
            //val offset : kotlin.Int = 56 // kotlin.Int | The zero-ary offset index into the results
            //val result : CurrenciesResponse = apiInstance.getCurrenciesUsingGET(countryId, hateoasMode, limit, offset)
            //result shouldBe ("TODO")
        }

        // to test getLanguagesUsingGET
        should("test getLanguagesUsingGET") {
            // uncomment below to test getLanguagesUsingGET
            //val hateoasMode : kotlin.Boolean = true // kotlin.Boolean | Include HATEOAS-style links in results
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to retrieve
            //val offset : kotlin.Int = 56 // kotlin.Int | The zero-ary offset index into the results
            //val result : LanguagesResponse = apiInstance.getLanguagesUsingGET(hateoasMode, limit, offset)
            //result shouldBe ("TODO")
        }

        // to test getLocalesUsingGET
        should("test getLocalesUsingGET") {
            // uncomment below to test getLocalesUsingGET
            //val hateoasMode : kotlin.Boolean = true // kotlin.Boolean | Include HATEOAS-style links in results
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to retrieve
            //val offset : kotlin.Int = 56 // kotlin.Int | The zero-ary offset index into the results
            //val result : LocalesResponse = apiInstance.getLocalesUsingGET(hateoasMode, limit, offset)
            //result shouldBe ("TODO")
        }

        // to test getTimeZoneDateTimeUsingGET
        should("test getTimeZoneDateTimeUsingGET") {
            // uncomment below to test getTimeZoneDateTimeUsingGET
            //val zoneId : kotlin.String = zoneId_example // kotlin.String | A time-zone id
            //val result : DateTimeResponse = apiInstance.getTimeZoneDateTimeUsingGET(zoneId)
            //result shouldBe ("TODO")
        }

        // to test getTimeZoneTimeUsingGET
        should("test getTimeZoneTimeUsingGET") {
            // uncomment below to test getTimeZoneTimeUsingGET
            //val zoneId : kotlin.String = zoneId_example // kotlin.String | A time-zone id
            //val result : TimeResponse = apiInstance.getTimeZoneTimeUsingGET(zoneId)
            //result shouldBe ("TODO")
        }

        // to test getTimeZoneUsingGET
        should("test getTimeZoneUsingGET") {
            // uncomment below to test getTimeZoneUsingGET
            //val zoneId : kotlin.String = zoneId_example // kotlin.String | A time-zone id
            //val result : TimeZoneResponse = apiInstance.getTimeZoneUsingGET(zoneId)
            //result shouldBe ("TODO")
        }

        // to test getTimezonesUsingGET
        should("test getTimezonesUsingGET") {
            // uncomment below to test getTimezonesUsingGET
            //val hateoasMode : kotlin.Boolean = true // kotlin.Boolean | Include HATEOAS-style links in results
            //val limit : kotlin.Int = 56 // kotlin.Int | The maximum number of results to retrieve
            //val offset : kotlin.Int = 56 // kotlin.Int | The zero-ary offset index into the results
            //val result : TimeZonesResponse = apiInstance.getTimezonesUsingGET(hateoasMode, limit, offset)
            //result shouldBe ("TODO")
        }

    }
}
