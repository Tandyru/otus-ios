/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import kotlinx.serialization.*

/**
 * One of a set of enumerated error codes representing the types of errors that can occur processing a request 
 *
 * Values: ACCESS_DENIED,ENTITY_NOT_FOUND,INCOMPATIBLE,PARAM_INVALID,PARAMS_MUTUALLY_EXCLUSIVE,REQUEST_UNPROCESSABLE
 */
@Serializable
enum class ErrorCode(val value: kotlin.String) {

    @SerialName(value = "ACCESS_DENIED")
    ACCESS_DENIED("ACCESS_DENIED"),

    @SerialName(value = "ENTITY_NOT_FOUND")
    ENTITY_NOT_FOUND("ENTITY_NOT_FOUND"),

    @SerialName(value = "INCOMPATIBLE")
    INCOMPATIBLE("INCOMPATIBLE"),

    @SerialName(value = "PARAM_INVALID")
    PARAM_INVALID("PARAM_INVALID"),

    @SerialName(value = "PARAMS_MUTUALLY_EXCLUSIVE")
    PARAMS_MUTUALLY_EXCLUSIVE("PARAMS_MUTUALLY_EXCLUSIVE"),

    @SerialName(value = "REQUEST_UNPROCESSABLE")
    REQUEST_UNPROCESSABLE("REQUEST_UNPROCESSABLE");

    /**
     * Override [toString()] to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): kotlin.String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is ErrorCode) "$data" else null

        /**
         * Returns a valid [ErrorCode] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): ErrorCode? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

